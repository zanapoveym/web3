#include <iostream>
#include <vector>
#include <thread>
#include <numeric>

void partial_sum(const std::vector<int>& data, size_t start, size_t end, long long &result) {
    result = std::accumulate(data.begin() + start, data.begin() + end, 0LL);
}

int main() {
    std::vector<int> data(1000000, 1); // 1 百万个元素，均为 1
    size_t mid = data.size() / 2;
    long long sum1 = 0, sum2 = 0;
    
    std::thread t1(partial_sum, std::cref(data), 0, mid, std::ref(sum1));
    std::thread t2(partial_sum, std::cref(data), mid, data.size(), std::ref(sum2));
    
    t1.join();
    t2.join();
    
    long long total = sum1 + sum2;
    std::cout << "Total sum: " << total << std::endl;
    return 0;
}
